name: 'Infrastructure deployment'

on:
  push:
    branches:
    - main
  pull_request:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production


    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install OPA dependencies
      run: |
        sudo curl -L -o /usr/local/sbin/opa https://openpolicyagent.org/downloads/v0.34.2/opa_linux_amd64_static
        sudo chmod +x /usr/local/sbin/opa

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      env:
        METAL_AUTH_TOKEN: ${{ secrets.METAL_AUTH_TOKEN }}
        TF_VAR_project_id: ${{ secrets.TF_VAR_PROJECT_ID }}
      run: |
        terraform plan --out tfplan.binary
        terraform show -json tfplan.binary > tfplan.json

    - name: OPA testing
      run: |
        ls -la
        opa eval --fail-defined --format pretty --input tfplan.json --data policy/ data.terraform.deny
